package com.typesafe.slick.testkit.tests

import org.junit.Assert._
import scala.slick.meta._
import scala.slick.ast.ColumnOption
import scala.slick.jdbc.meta.MTable
import scala.slick.jdbc.meta
import com.typesafe.slick.testkit.util.{JdbcTestDB, TestkitTest}
import scala.slick.test.meta.codegen.roundtrip.Tables

/** Tests code generated by CodeGeneratorTest */
class CodeGenRoundTripTest extends TestkitTest[JdbcTestDB] {
  import tdb.profile.simple._
  def test {
    object Tables extends Tables(tdb.profile)
    import Tables.profile.simple._
    val ddl = Tables.Posts.ddl ++ Tables.Categories.ddl ++ Tables.TypeTest.ddl
    //println(ddl.createStatements.mkString("\n"))

    try{
      ddl.create
    } catch {
      case e:java.sql.SQLSyntaxErrorException => println(ddl.createStatements.mkString("\n")); throw e
    }
    Tables.Categories.insert( Tables.CategoriesRow(1,"cat") )
    Tables.Posts.insertAll(
      Tables.PostsRow(1,"post 1",Some(1)),
      Tables.PostsRow(2,"post 2",Some(1)),
      Tables.PostsRow(3,"post 3",Some(1))
    )
    Tables.Categories.insert( Tables.CategoriesRow(2,"cat") )
    val res = ( Tables.Posts.length.run, Tables.Posts.filter(_.title =!= "post 1").map(_.title).run.toList )
    assertEquals((3,List("post 2","post 3")), res)
  }
}
